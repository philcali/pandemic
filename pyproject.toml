[project]
name = "pandemic"
version = "0.0.1"
description = "Pandemic edge computing system - monorepo"
readme = "README.md"
license = {text = "MIT"}
keywords = ["edge", "monorepo", "systemd"]
authors = [{name = "Pandemic Team"}]
dependencies = [
    "pandemic-core==0.0.1",
    "pandemic-cli==0.0.1",
    "pandemic-common==0.0.1"
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0",
    "pytest-asyncio>=0.21", 
    "pytest-cov>=4.0",
    "black>=23.0",
    "isort>=5.0",
    "mypy>=1.0",
    "flake8>=6.0",
    "flake8-docstrings>=1.7",
    "pre-commit>=3.0"
]

[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

# Monorepo tool configuration
[tool.pytest.ini_options]
testpaths = ["tests", "packages/*/tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --tb=short"
asyncio_mode = "auto"

[tool.black]
line-length = 100
target-version = ['py310']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.mypy]
python_version = "3.10"
warn_return_any = false
warn_unused_configs = false
disallow_untyped_defs = false
show_error_codes = true
namespace_packages = true
explicit_package_bases = true
ignore_missing_imports = true
no_implicit_optional = false
check_untyped_defs = false
disallow_any_generics = false

[tool.flake8]
max-line-length = 100
extend-ignore = [
    "E203",  # whitespace before ':' (conflicts with black)
    "W503",  # line break before binary operator (conflicts with black)
    "D100",  # Missing docstring in public module
    "D104",  # Missing docstring in public package
]
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    ".eggs",
    "*.egg-info",
    ".venv",
    ".mypy_cache",
]
docstring-convention = "google"